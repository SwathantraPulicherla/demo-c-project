name: AI Test Generation

on:
  issues:
    types: [opened, labeled, edited]
  workflow_dispatch:  # Manual trigger for testing

jobs:
  generate-tests:
    if: contains(github.event.issue.labels.*.name, 'ai-test-gen') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read

    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        path: target-repo

    - name: Checkout AI tools
      uses: actions/checkout@v4
      with:
        repository: SwathantraPulicherla/ai-c-test-generator
        path: ai-tools
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Upgrade pip and setuptools
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install AI test generator
      run: |
        cd ai-tools
        pip install --upgrade --force-reinstall google-generativeai>=0.8.0 python-dotenv
        pip install --pre -e .
        python3 -c "import google.generativeai as genai; print('Installed version:', genai.__version__); print('Has GenerativeModel:', hasattr(genai, 'GenerativeModel'))"

    - name: Generate AI tests
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd target-repo
        ai-c-testgen --api-key "$GEMINI_API_KEY" --source src/

    - name: Check for changes
      id: verify-changed-files
      run: |
        cd target-repo
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push generated tests
      if: steps.verify-changed-files.outputs.changes == 'true'
      run: |
        cd target-repo
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "ü§ñ AI-generated unit tests

        Generated by AI Test Generator
        ${{ github.event_name == 'issues' && format('Triggered by issue #{0}', github.event.issue.number) || 'Triggered manually' }}"
        git push

    - name: Comment on issue
      if: steps.verify-changed-files.outputs.changes == 'true' && github.event_name == 'issues'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚úÖ AI test generation completed! Tests have been generated and committed to the repository.'
          })

    - name: Comment on issue (no changes)
      if: steps.verify-changed-files.outputs.changes == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚ÑπÔ∏è AI test generation completed, but no new tests were generated. This might indicate that tests already exist or no suitable source files were found.'
          })